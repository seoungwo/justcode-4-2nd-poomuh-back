// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  name         String
  nickname     String
  phone_number String?
  created_at   DateTime? @default(now())

  user_real_estate_likes UsersRealEstatesLikes[]

  @@map("users")
}

model RealEstateAgents {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  name         String
  nickname     String
  phone_number String?
  created_at   DateTime? @default(now())

  real_estates RealEstates[]

  @@map("real_estate_agents")
}

model RealEstates {
  id                   Int       @id @default(autoincrement())
  address_main         String
  address_dong         String?
  address_ho           String?
  latitude             Decimal   @db.Decimal(18, 15)
  longitude            Decimal   @db.Decimal(18, 15)
  supply_size          Int
  exclusive_size       Int
  building_floor       String
  current_floor        String
  available_date       String
  description_title    String
  description_detail   String    @db.VarChar(1000)
  is_deleted           Boolean
  price_main           Decimal?  @db.Decimal(10, 0)
  prcie_deposit        Decimal?  @db.Decimal(10, 0)
  price_monthly        Decimal?  @db.Decimal(10, 0)
  heat_id              Int
  category_id          Int
  real_estate_agent_id Int
  created_at           DateTime? @default(now())
  updated_at           DateTime? @default(now())
  deleted_at           DateTime? @default(now())

  heats              Heats            @relation(fields: [heat_id], references: [id])
  categories         Categories       @relation(fields: [category_id], references: [id])
  real_estate_agents RealEstateAgents @relation(fields: [real_estate_agent_id], references: [id])

  users_real_estate_likes UsersRealEstatesLikes[]
  trades_real_estates     TradesRealEstates[]

  @@map("real_estates")
}

model Heats {
  id         Int       @id @default(autoincrement())
  type       String
  created_at DateTime? @default(now())


  real_estates RealEstates[]

  @@map("heats")
}

model Categories {
  id         Int       @id @default(autoincrement())
  type       String
  created_at DateTime? @default(now())


  real_estates RealEstates[]

  @@map("categories")
}

model Trades {
  id         Int       @id @default(autoincrement())
  type       String
  created_at DateTime? @default(now())

  trades_real_estates TradesRealEstates[]

  @@map("trades")
}

model TradesRealEstates {
  id             Int       @id @default(autoincrement())
  trade_id       Int
  real_estate_id Int
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  deleted_at     DateTime? @default(now())

  trades       Trades      @relation(fields: [trade_id], references: [id])
  real_estates RealEstates @relation(fields: [real_estate_id], references: [id])

  @@map("trades_real_estates")
}

model UsersRealEstatesLikes {
  id             Int       @id @default(autoincrement())
  user_id        Int
  real_estate_id Int
  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())
  deleted_at     DateTime? @default(now())

  users        Users       @relation(fields: [user_id], references: [id])
  real_estates RealEstates @relation(fields: [real_estate_id], references: [id])


  @@map("users_real_estates_likes")
}
